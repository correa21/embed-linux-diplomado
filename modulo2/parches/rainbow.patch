diff --git a/sl/Makefile b/sl/Makefile
index c3005d2..73a60b3 100644
--- a/sl/Makefile
+++ b/sl/Makefile
@@ -7,14 +7,7 @@
 #==========================================
 
 CC=gcc
-CFLAGS=-O -Wall
-
-all: sl
+CFLAGS=-O
 
 sl: sl.c sl.h
 	$(CC) $(CFLAGS) -o sl sl.c -lncurses
-
-clean:
-	rm -f sl
-
-distclean: clean
diff --git a/sl/README.md b/sl/README.md
index 9ce21a5..5760501 100644
--- a/sl/README.md
+++ b/sl/README.md
@@ -6,5 +6,3 @@ you meant to type "ls". It's just a joke command, and not useful at
 all.
 
 Copyright 1993,1998,2014 Toyoda Masashi (mtoyoda@acm.org)
-
-![](demo.gif)
\ No newline at end of file
diff --git a/sl/sl.1 b/sl/sl.1
index aaf3261..d5ae884 100644
--- a/sl/sl.1
+++ b/sl/sl.1
@@ -20,7 +20,7 @@ is a highly advanced animation program for curing your bad habit of mistyping.
 An accident is occurring. People cry for help.
 .TP
 .B \-l
-Little version.
+Little version
 .TP
 .B \-F
 It flies like the galaxy express 999.
diff --git a/sl/sl.c b/sl/sl.c
index e549ac8..2ac14c9 100644
--- a/sl/sl.c
+++ b/sl/sl.c
@@ -1,13 +1,11 @@
 /*========================================
- *    sl.c: SL version 5.03
- *        Copyright 1993,1998,2014-2015
+ *    sl.c: SL version 5.02
+ *        Copyright 1993,1998,2014
  *                  Toyoda Masashi
  *                  (mtoyoda@acm.org)
  *        Last Modified: 2014/06/03
  *========================================
  */
-/* sl version 5.03 : Fix some more compiler warnings.                        */
-/*                                              by Ryan Jacobs    2015/01/19 */
 /* sl version 5.02 : Fix compiler warnings.                                  */
 /*                                              by Jeff Schwab    2014/06/03 */
 /* sl version 5.01 : removed cursor and handling of IO                       */
@@ -35,7 +33,7 @@
 /*                                              by Toyoda Masashi 1992/12/14 */
 /* sl version 1.01 : Add more complex smoke.                                 */
 /*                                              by Toyoda Masashi 1992/12/14 */
-/* sl version 1.00 : SL runs vomiting out smoke.                             */
+/* sl version 1.00 : SL runs vomitting out smoke.                            */
 /*                                              by Toyoda Masashi 1992/12/11 */
 
 #include <curses.h>
@@ -55,19 +53,32 @@ int ACCIDENT  = 0;
 int LOGO      = 0;
 int FLY       = 0;
 int C51       = 0;
+int RAINBOW   = 0;
 
 int my_mvaddstr(int y, int x, char *str)
 {
+    int color;
     for ( ; x < 0; ++x, ++str)
         if (*str == '\0')  return ERR;
-    for ( ; *str != '\0'; ++str, ++x)
-        if (mvaddch(y, x, *str) == ERR)  return ERR;
+    for ( ; *str != '\0'; ++str, ++x) {
+        if (RAINBOW == 1) {
+            color = ((x+y)/5) % 7 + 1;
+            attron(COLOR_PAIR(color));
+        }
+        if (mvaddch(y, x, *str) == ERR) {
+            if (RAINBOW == 1)
+                attroff(COLOR_PAIR(color));
+            return ERR;
+        }
+        if (RAINBOW == 1)
+            attroff(COLOR_PAIR(color));
+    }
     return OK;
 }
 
 void option(char *str)
 {
-    extern int ACCIDENT, LOGO, FLY, C51;
+    extern int ACCIDENT, FLY, LONG;
 
     while (*str != '\0') {
         switch (*str++) {
@@ -75,6 +86,7 @@ void option(char *str)
             case 'F': FLY      = 1; break;
             case 'l': LOGO     = 1; break;
             case 'c': C51      = 1; break;
+            case 'r': RAINBOW  = 1; break;
             default:                break;
         }
     }
@@ -97,6 +109,28 @@ int main(int argc, char *argv[])
     leaveok(stdscr, TRUE);
     scrollok(stdscr, FALSE);
 
+    if (RAINBOW == 1) {
+        start_color();
+
+        if (can_change_color()) {
+            init_color(COLOR_RED, 1000, 0, 0);
+            init_color(COLOR_WHITE, 1000, 500, 0);
+            init_color(COLOR_YELLOW, 1000, 1000, 0);
+            init_color(COLOR_GREEN, 0, 1000, 0);
+            init_color(COLOR_CYAN, 300, 300, 1000);
+            init_color(COLOR_BLUE, 0, 0, 1000);
+            init_color(COLOR_MAGENTA, 1000, 0, 1000);
+        }
+
+        init_pair(1, COLOR_RED, COLOR_BLACK);
+        init_pair(2, COLOR_WHITE, COLOR_BLACK);
+        init_pair(3, COLOR_YELLOW, COLOR_BLACK);
+        init_pair(4, COLOR_GREEN, COLOR_BLACK);
+        init_pair(5, COLOR_CYAN, COLOR_BLACK);
+        init_pair(6, COLOR_BLUE, COLOR_BLACK);
+        init_pair(7, COLOR_MAGENTA, COLOR_BLACK);
+    }
+
     for (x = COLS - 1; ; --x) {
         if (LOGO == 1) {
             if (add_sl(x) == ERR) break;
@@ -113,14 +147,12 @@ int main(int argc, char *argv[])
     }
     mvcur(0, COLS - 1, LINES - 1, 0);
     endwin();
-
-    return 0;
 }
 
 
 int add_sl(int x)
 {
-    static char *sl[LOGOPATTERNS][LOGOHEIGHT + 1]
+    static char *sl[LOGOPATTERNS][LOGOHIGHT + 1]
         = {{LOGO1, LOGO2, LOGO3, LOGO4, LWHL11, LWHL12, DELLN},
            {LOGO1, LOGO2, LOGO3, LOGO4, LWHL21, LWHL22, DELLN},
            {LOGO1, LOGO2, LOGO3, LOGO4, LWHL31, LWHL32, DELLN},
@@ -128,10 +160,10 @@ int add_sl(int x)
            {LOGO1, LOGO2, LOGO3, LOGO4, LWHL51, LWHL52, DELLN},
            {LOGO1, LOGO2, LOGO3, LOGO4, LWHL61, LWHL62, DELLN}};
 
-    static char *coal[LOGOHEIGHT + 1]
+    static char *coal[LOGOHIGHT + 1]
         = {LCOAL1, LCOAL2, LCOAL3, LCOAL4, LCOAL5, LCOAL6, DELLN};
 
-    static char *car[LOGOHEIGHT + 1]
+    static char *car[LOGOHIGHT + 1]
         = {LCAR1, LCAR2, LCAR3, LCAR4, LCAR5, LCAR6, DELLN};
 
     int i, y, py1 = 0, py2 = 0, py3 = 0;
@@ -140,10 +172,10 @@ int add_sl(int x)
     y = LINES / 2 - 3;
 
     if (FLY == 1) {
-        y = (x / 6) + LINES - (COLS / 6) - LOGOHEIGHT;
+        y = (x / 6) + LINES - (COLS / 6) - LOGOHIGHT;
         py1 = 2;  py2 = 4;  py3 = 6;
     }
-    for (i = 0; i <= LOGOHEIGHT; ++i) {
+    for (i = 0; i <= LOGOHIGHT; ++i) {
         my_mvaddstr(y + i, x, sl[(LOGOLENGTH + x) / 3 % LOGOPATTERNS][i]);
         my_mvaddstr(y + i + py1, x + 21, coal[i]);
         my_mvaddstr(y + i + py2, x + 42, car[i]);
@@ -161,7 +193,7 @@ int add_sl(int x)
 
 int add_D51(int x)
 {
-    static char *d51[D51PATTERNS][D51HEIGHT + 1]
+    static char *d51[D51PATTERNS][D51HIGHT + 1]
         = {{D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,
             D51WHL11, D51WHL12, D51WHL13, D51DEL},
            {D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,
@@ -174,7 +206,7 @@ int add_D51(int x)
             D51WHL51, D51WHL52, D51WHL53, D51DEL},
            {D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,
             D51WHL61, D51WHL62, D51WHL63, D51DEL}};
-    static char *coal[D51HEIGHT + 1]
+    static char *coal[D51HIGHT + 1]
         = {COAL01, COAL02, COAL03, COAL04, COAL05,
            COAL06, COAL07, COAL08, COAL09, COAL10, COALDEL};
 
@@ -184,10 +216,10 @@ int add_D51(int x)
     y = LINES / 2 - 5;
 
     if (FLY == 1) {
-        y = (x / 7) + LINES - (COLS / 7) - D51HEIGHT;
+        y = (x / 7) + LINES - (COLS / 7) - D51HIGHT;
         dy = 1;
     }
-    for (i = 0; i <= D51HEIGHT; ++i) {
+    for (i = 0; i <= D51HIGHT; ++i) {
         my_mvaddstr(y + i, x, d51[(D51LENGTH + x) % D51PATTERNS][i]);
         my_mvaddstr(y + i + dy, x + 53, coal[i]);
     }
@@ -201,7 +233,7 @@ int add_D51(int x)
 
 int add_C51(int x)
 {
-    static char *c51[C51PATTERNS][C51HEIGHT + 1]
+    static char *c51[C51PATTERNS][C51HIGHT + 1]
         = {{C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,
             C51WH11, C51WH12, C51WH13, C51WH14, C51DEL},
            {C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,
@@ -214,7 +246,7 @@ int add_C51(int x)
             C51WH51, C51WH52, C51WH53, C51WH54, C51DEL},
            {C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,
             C51WH61, C51WH62, C51WH63, C51WH64, C51DEL}};
-    static char *coal[C51HEIGHT + 1]
+    static char *coal[C51HIGHT + 1]
         = {COALDEL, COAL01, COAL02, COAL03, COAL04, COAL05,
            COAL06, COAL07, COAL08, COAL09, COAL10, COALDEL};
 
@@ -224,10 +256,10 @@ int add_C51(int x)
     y = LINES / 2 - 5;
 
     if (FLY == 1) {
-        y = (x / 7) + LINES - (COLS / 7) - C51HEIGHT;
+        y = (x / 7) + LINES - (COLS / 7) - C51HIGHT;
         dy = 1;
     }
-    for (i = 0; i <= C51HEIGHT; ++i) {
+    for (i = 0; i <= C51HIGHT; ++i) {
         my_mvaddstr(y + i, x, c51[(C51LENGTH + x) % C51PATTERNS][i]);
         my_mvaddstr(y + i + dy, x + 55, coal[i]);
     }
diff --git a/sl/sl.h b/sl/sl.h
index fbf6938..6e7206e 100644
--- a/sl/sl.h
+++ b/sl/sl.h
@@ -7,7 +7,7 @@
  *========================================
  */
 
-#define D51HEIGHT	10
+#define D51HIGHT	10
 #define D51FUNNEL	 7
 #define D51LENGTH	83
 #define D51PATTERNS	 6
@@ -60,7 +60,7 @@
 
 #define COALDEL "                              "
 
-#define LOGOHEIGHT    	 6
+#define LOGOHIGHT    	 6
 #define LOGOFUNNEL  	 4
 #define LOGOLENGTH      84
 #define LOGOPATTERNS	 6
@@ -104,7 +104,7 @@
 
 #define DELLN  "                     "
 
-#define C51HEIGHT 11
+#define C51HIGHT 11
 #define C51FUNNEL 7
 #define C51LENGTH 87
 #define C51PATTERNS 6
